{"version":3,"sources":["webpack:///src/views/enclosure/mapInfo_edit.vue","webpack:///./src/views/enclosure/mapInfo_edit.vue?7bfb","webpack:///./src/views/enclosure/mapInfo_edit.vue"],"names":["mapInfo_edit","computed","extends_default","Object","vuex_esm","name","_this","this","Date","getDate","day","dataJosn","log","enclosureInfo","data","position","radius","alert_condition","element","points","time1","$http","post","mapKey","$route","query","gid","then","res","close","catch","err","_this2","HOST","id","userToken","student_id","repeat","time","enable","valid_time","enclosure_mapInfo_edit","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","title","slot","icon","on","click","goback","_v","label","placeholder","model","value","formdata","callback","$$v","$set","expression","align","options","sub","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"+JAgBAA,yCAKA,mBAEA,yBAGA,cAEA,gBAEA,cAIA,YAEAC,SAAAC,OAAAC,OAAAC,EAAA,EAAAD,EAAA,gBAEA,8FAGAE,mDAKA,mBAEA,IAAAC,EAAAC,0CAEA,gBACA,2BAEA,qBAEA,4BACAC,oBACA,MACAC,qCAEA,iBAGAC,qCAGAC,OAAA,wCAEAC,IAAAL,KAAAM,cAAAC,KAAA,GAAAC,SAAA,OAAAR,KACAM,cAAAC,KAAA,GAAAC,SAEA,0BAGAV,uDACAE,KAAAM,cAAAC,KAAA,GAAAC,SACA,6BACAC,cACA,cACA,qCACA,+BACA,uCAEAC,qBACA,0BAEAH,OACA,6EAGA,0BAEAI,EAAAH,SACA,+BAIAV,YACAc,SACA,kBACAC,SACA,qCACA,+BACA,uCAEAH,6DAKAI,MACAC,KAAA,gDACAf,KAAAgB,OAAA,QAAAhB,KAAAiB,OAAAC,MACAC,IAAA,gBAEAf,GAAAgB,KAAA,SAAAC,eAQAC,UACAC,MAAA,SAAAC,WAEA,kBAIAV,MACAC,KAAA,gDAAAf,KACAgB,OAEAZ,GAAAgB,KAAA,SAAAC,sCAIA,wEAGA,mBAEAC,UAEAC,MAAA,SAAAC,eAEAF,gBACA,sCAKA,IAAAG,EAAAzB,gCAEAc,MAAAC,KAAAf,KAAA0B,KAAA,4CAEAC,2BACAC,mCACAC,gBACA,2BACAV,WACArB,UACA,8CACA,8CACA,0CACAc,eACA,WACAkB,kBACA,UACAC,oDAEA,MAhBAX,KAAA,SAAAC,uCAmBAC,gBACA,wEAGA,SAEAC,MAAA,SAAAC,WAEA,eAGAV,MAAAC,KAAAf,KAAA0B,KAAA,8CAEAE,mCACAC,kBACAF,UACAR,WACArB,UACA,8CACA,8CACA,0CACAc,gBACAoB,oBACAC,oBACAH,kBACA,UACAC,oDAEA,MAhBAX,KAAA,SAAAC,uCAmBAC,gBACA,wEAGA,SAEAC,MAAA,SAAAC,WAEA,aCnNAU,GADiBC,OAFjB,WAA0B,IAAAC,EAAApC,KAAaqC,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,cAAwBF,EAAA,aAAkBG,OAAOC,MAAA,UAAgBJ,EAAA,aAAkBG,OAAOE,KAAA,OAAAC,KAAA,QAA4BC,IAAKC,MAAAX,EAAAY,QAAmBJ,KAAA,UAAa,GAAAR,EAAAa,GAAA,KAAAV,EAAA,YAAiCG,OAAOQ,MAAA,OAAAC,YAAA,UAAsCC,OAAQC,MAAAjB,EAAAkB,SAAA,KAAAC,SAAA,SAAAC,GAAmDpB,EAAAqB,KAAArB,EAAAkB,SAAA,OAAAE,IAAoCE,WAAA,mBAA6BtB,EAAAa,GAAA,KAAAV,EAAA,YAA6BG,OAAOiB,MAAA,QAAAC,QAAAxB,EAAAwB,SAAsCR,OAAQC,MAAAjB,EAAAkB,SAAA,gBAAAC,SAAA,SAAAC,GAA8DpB,EAAAqB,KAAArB,EAAAkB,SAAA,kBAAAE,IAA+CE,WAAA,8BAAwCtB,EAAAa,GAAA,KAAAV,EAAA,OAAwBE,YAAA,YAAsBF,EAAA,UAAeE,YAAA,UAAAK,IAA0BC,MAAAX,EAAAyB,OAAiBzB,EAAAa,GAAA,eAE7wBa,oBCCjB,IAcAC,EAdAC,EAAA,OAcAC,CACAxE,EACAyC,GATA,EAVA,SAAAgC,GACAF,EAAA,SAaA,kBAEA,MAUAG,EAAA,QAAAJ,EAAA","file":"static/js/2.616295aa7721ba28b7e3.js","sourcesContent":["<template>\n  <div class=\"info-body\">\n    <mt-header title=\"电子围栏\">\n      <mt-button icon=\"back\" @click=\"goback\" slot=\"left\"></mt-button>\n    </mt-header>\n    <mt-field label=\"围栏名称\" placeholder=\"填写围栏名称\" v-model=\"formdata.name\"></mt-field>\n    <mt-radio align=\"right\" v-model=\"formdata.alert_condition\" :options=\"options\">\n    </mt-radio>\n    <div class=\"opreate\">\n      <button class=\"btn-sub\" @click=\"sub\">确定</button>\n    </div>\n  </div>\n</template>\n<script>\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        formdata: {\n          name: \"\",\n          alert_condition: \"enter\"\n        },\n        options: [\n          {\n            value: \"enter\",\n            label: \"进围栏报警\"\n          },\n          {\n            value: \"leave\",\n            label: \"出围栏报警\"\n          }\n        ]\n      };\n    },\n    computed: {\n      ...mapGetters([\"enclosureInfo\",\"userInfo\"])\n    },\n    created() {\n      if (this.$route.query.gid) {\n        this.formdata.name = this.$route.query.name;\n      }\n    },\n    methods: {\n      goback() {\n        this.$router.go(-1);\n      },\n      sub() {\n        if (this.formdata.name == \"\") {\n          this.toast(\"围栏名称不能为空\");\n        } else {\n          this.Indicator.open({\n            text: \"请稍后...\",\n            spinnerType: \"fading-circle\"\n          });\n          let date1 = new Date();\n          let month = date1.getMonth() + 1;\n          let day = date1.getDate();\n          if (month < 10) {\n            month = `0${date1.getMonth() + 1}`;\n          }\n          if (day < 10) {\n            day = `0${day}`;\n          }\n          let time1 = date1.getFullYear() + \"-\" + month + \"-\" + day; //time1表示当前时间\n          let dataJosn;\n          if (this.enclosureInfo.type == 0) {\n            console.log(\n              `${this.enclosureInfo.data[0].position[0]},${this.enclosureInfo\n                .data[0].position[1]}`\n            );\n            //圆形围栏数据格式设置\n            dataJosn = {\n              name: this.formdata.name,\n              center: `${this.enclosureInfo.data[0].position[0]},${this\n                .enclosureInfo.data[0].position[1]}`,\n              radius: this.enclosureInfo.radius,\n              enable: \"true\",\n              repeat: \"Mon,Tues,Wed,Thur,Fri,Sat,Sun\",\n              time: \"00:00,11:59;13:00,23:59\",\n              desc: \"测试围栏描述\",\n              alert_condition: this.formdata.alert_condition\n            };\n          } else {\n            //多边形\n            let pointsArray = this.enclosureInfo.data;\n            let points = \"\";\n            pointsArray.forEach((element, index) => {\n              if (index == pointsArray.length - 1) {\n                points = `${points}${element.position[0]},${element.position[1]}`;\n              } else {\n                points = `${points}${element.position[0]},${element\n                  .position[1]};`;\n              }\n            });\n            dataJosn = {\n              name: this.formdata.name,\n              points: points,\n              enable: \"true\",\n              valid_time: time1,\n              repeat: \"Mon,Tues,Wed,Thur,Fri,Sat,Sun\",\n              time: \"00:00,11:59;13:00,23:59\",\n              desc: \"测试围栏描述\",\n              alert_condition: this.formdata.alert_condition\n            };\n          }\n          if (this.$route.query.gid) {\n            delete dataJosn.enable; //更新围栏不能含有enable参数，删除\n            //如果路由存在该gid说明为更新围栏\n            this.$http\n              .post(\n                `http://restapi.amap.com/v4/geofence/meta?key=${this\n                  .mapKey}&gid=${this.$route.query.gid}&method=patch`,\n                dataJosn\n              )\n              .then(res => {\n                // if (res.data.data.message == \"成功\") {\n                //   console.log(res.data.data.message)\n                //   this.subServer(dataJosn, res.data.data);\n                // } else {\n                //   this.Indicator.close();\n                // }\n                 this.Indicator.close();\n              })\n              .catch(err => {\n                this.toast(\"更新围栏失败\");\n              });\n          } else {\n            //新建围栏\n            this.$http\n              .post(\n                `http://restapi.amap.com/v4/geofence/meta?key=${this.mapKey}`,\n                dataJosn\n              )\n              .then(res => {\n                if (res.data.data.message == \"成功\") {\n                  // this.subServer(dataJosn, res.data.data);\n                  this.toast('创建围栏成功')\n                  setTimeout(() => {\n                  this.$router.replace({path: \"/enclosure\"}); //回到围栏列表页\n                }, 1500);\n                } else {\n                  this.Indicator.close();\n                }\n              })\n              .catch(err => {\n                this.Indicator.close();\n                this.toast(\"创建围栏失败\");\n              });\n          }\n        }\n      },\n      subServer(data, serverData) {\n        if (this.$route.query.gid) {\n          this.$http\n            .post(`${this.HOST}/post/editEnclosure`, {\n              id: this.$route.query.id,\n              userToken: this.userInfo.userToken,\n              student_id: this.userInfo.student_id,\n              s_id: '0',\n              g_id: this.$route.query.gid,\n              name: data.name,\n              desc: \"\",\n              center: this.enclosureInfo.type == 0 ? data.center : \"\",\n              radius: this.enclosureInfo.type == 0 ? data.radius : \"\",\n              points: this.enclosureInfo.type == 0 ? \"\" : data.points,\n              enable: true,\n              repeat: data.repeat,\n              fixed_date: \"\",\n              time: data.time,\n              alert_condition: data.alert_condition == \"enter\" ? '0' : '1'\n            })\n            .then(res => {\n              if (res.data.code == \"000000\") {\n                this.Indicator.close();\n                this.toast(\"更新围栏成功\");\n                setTimeout(() => {\n                  this.$router.replace({path: \"/enclosure\"}); //回到围栏列表页\n                }, 1500);\n              }\n            })\n            .catch(err => {\n              this.toast(\"保存失败\");\n            });\n        } else {\n          this.$http\n            .post(`${this.HOST}/post/addEnclosure`, {\n              userToken: this.userInfo.userToken,\n              student_id: this.userInfo.student_id,\n              s_id: serverData.id,\n              g_id: serverData.gid,\n              name: data.name,\n              desc: \"\",\n              center: this.enclosureInfo.type == 0 ? data.center : \"\",\n              radius: this.enclosureInfo.type == 0 ? data.radius : \"\",\n              points: this.enclosureInfo.type == 0 ? \"\" : data.points,\n              enable: data.enable,\n              valid_time: data.valid_time,\n              repeat: data.repeat,\n              fixed_date: \"\",\n              time: data.time,\n              alert_condition: data.alert_condition == \"enter\" ? '0' : '1'\n            })\n            .then(res => {\n              if (res.data.code == \"000000\") {\n                this.Indicator.close();\n                this.toast(\"创建围栏成功\");\n                setTimeout(() => {\n                  this.$router.replace({path: \"/enclosure\"}); //回到围栏列表页\n                }, 1500);\n              }\n            })\n            .catch(err => {\n              this.toast(\"保存失败\");\n            });\n        }\n      }\n\n    }\n  };\n</script>\n<style lang=\"scss\" scoped>\n  @import \"../../assets/sass/_mixins.scss\";\n  @import \"../../assets/sass/_parameters.scss\";\n\n  .info-body {\n    color: #008ceb;\n  }\n\n  .mint-cell-text {\n    color: #008ceb !important;\n  }\n\n  .opreate {\n    margin-top: 29%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    .btn-sub {\n      background: $enclosure-color;\n      color: #fff;\n      border-color: $enclosure-color;\n      border-radius: 5px;\n      @include wh(70%, 45px);\n      font-size: 14px;\n    }\n  }\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/views/enclosure/mapInfo_edit.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"info-body\"},[_c('mt-header',{attrs:{\"title\":\"电子围栏\"}},[_c('mt-button',{attrs:{\"slot\":\"left\",\"icon\":\"back\"},on:{\"click\":_vm.goback},slot:\"left\"})],1),_vm._v(\" \"),_c('mt-field',{attrs:{\"label\":\"围栏名称\",\"placeholder\":\"填写围栏名称\"},model:{value:(_vm.formdata.name),callback:function ($$v) {_vm.$set(_vm.formdata, \"name\", $$v)},expression:\"formdata.name\"}}),_vm._v(\" \"),_c('mt-radio',{attrs:{\"align\":\"right\",\"options\":_vm.options},model:{value:(_vm.formdata.alert_condition),callback:function ($$v) {_vm.$set(_vm.formdata, \"alert_condition\", $$v)},expression:\"formdata.alert_condition\"}}),_vm._v(\" \"),_c('div',{staticClass:\"opreate\"},[_c('button',{staticClass:\"btn-sub\",on:{\"click\":_vm.sub}},[_vm._v(\"确定\")])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-e2c6eae8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=template&index=0!./src/views/enclosure/mapInfo_edit.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e2c6eae8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=styles&index=0!./mapInfo_edit.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./mapInfo_edit.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./mapInfo_edit.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e2c6eae8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=template&index=0!./mapInfo_edit.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e2c6eae8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/enclosure/mapInfo_edit.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}
{"version":3,"sources":["webpack:///src/views/enclosure/editMap.vue","webpack:///./src/views/enclosure/editMap.vue?905b","webpack:///./src/views/enclosure/editMap.vue"],"names":["postionMark","positionMarkPry","circle","editMap","name","method","this","drawClk","type","getdata","_this2","geolocation","getCurrentPosition","map","getLat","data","_this3","$http","get","mapKey","gid","then","res","setting","drawSt","catch","err","lat","icon","_this","markers","position","LngLat","datajson","drawType","radius","id","val","isfirstLoding","markerArray","enclosure_editMap","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","title","slot","on","click","goback","_v","$event","sheetVisible","tabindex","directives","rawName","value","expression","min","step","max","model","callback","$$v","staticStyle","margin-right","margin-left","isdraw","_s","goedit","actions","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/5.50c7a9626fa4d99f3d5c.js","sourcesContent":["<template>\n  <div class=\"editmap-body\">\n    <mt-header title=\"电子围栏\">\n     <mt-button icon=\"back\" @click=\"goback\" slot=\"left\"></mt-button>\n     <span slot=\"right\" @click=\"sheetVisible=true\">围栏类型</span>\n    </mt-header>\n    <div id=\"container\" tabindex=\"0\"></div>\n    <div class=\"drag-body\" v-show=\"drawType==0\">\n      <div class=\"drag\">\n          <mt-range v-model=\"radius\"  :min=\"100\" :step=\"100\" :max=\"1500\">\n            <div slot=\"start\" style=\"margin-right: 5px;\">100</div>\n            <div slot=\"end\" style=\"margin-left: 5px;\">150</div>\n          </mt-range>\n          <p v-show=\"!isdraw\">当前圆形半径为：{{radius}}</p>\n      </div>\n    </div>\n      <div class=\"footer-tip\">\n        <p v-if=\"drawType==1\">请在地图上点击三个以上的点组成一个闭合的多边形作为安全范围的区域</p>\n        <p v-else>请在地图上点击任意位置</p>\n        <button class=\"btn-ok\" @click=\"goedit\">确定</button>\n      </div>\n       <mt-actionsheet :actions=\"actions\" v-model=\"sheetVisible\"></mt-actionsheet>\n       <transition name=\"slide\">\n          <router-view class=\"router-body\"></router-view>\n       </transition>\n  </div>\n</template>\n<script>\nvar postionMark;\nvar positionMarkPry;\nlet circle, polygon, geolocation;\nexport default {\n  data() {\n    return {\n      mapInfo: {},\n      sheetVisible: false,\n      actions: [\n        { name: \"圆形（默认）\", method: this.drawClk, type: 0 },\n        { name: \"自定义形状\", method: this.drawClk, type: 1 }\n      ],\n      drawType: 0,\n      markers: [],\n      markerArray: [],\n      isClik: true,\n      isdraw: true,\n      radius: 500,\n      isfirstLoding: false\n    };\n  },\n  created() {\n    if (this.$route.query.gid) {\n      this.getdata();\n    }\n  },\n  mounted() {\n    let _this = this;\n    this.map = new AMap.Map(\"container\", {\n      //创建地图\n      resizeEnable: true,\n      zoom: 14\n    });\n    if (!this.$route.query.gid) {\n      //如果是新建那么就获取用户所在位置\n      this.map.plugin(\"AMap.Geolocation\", function() {\n        geolocation = new AMap.Geolocation({\n          enableHighAccuracy: true, //是否使用高精度定位，默认:true\n          timeout: 10000, //超过10秒后停止定位，默认：无穷大\n          buttonOffset: new AMap.Pixel(10, 20), //定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)\n          zoomToAccuracy: true, //定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\n          buttonPosition: \"RB\"\n        });\n        _this.map.addControl(geolocation);\n        geolocation.getCurrentPosition();\n      });\n    }\n    postionMark = this.map;\n    this.map.on(\"click\", res => {\n      let data = { Lng: res.lnglat.getLng(), lat: res.lnglat.getLat() };\n      this.mapClk(data);\n    });\n  },\n  methods: {\n    getdata() {\n      this.isfirstLoding = true;\n      this.$http\n        .get(\"http://restapi.amap.com/v4/geofence/meta\", {\n          params: {\n            key: this.mapKey,\n            gid: this.$route.query.gid,\n            page_no: 1,\n            page_size: 20\n          }\n        })\n        .then(res => {\n          this.mapInfo = res.data.data.rs_list[0];\n          let data = this.mapInfo.center.split(\",\");\n          this.map.setCenter([data[0], data[1]]); //设置地图中心点\n          if (this.mapInfo.points=='') {\n            let data = this.mapInfo.center.split(\",\");\n            this.mapClk({ Lng: data[0], lat: data[1] });\n            this.radius = this.mapInfo.radius; //圆形半径\n          } else {//多边形\n            let data = this.mapInfo.points.split(\";\");\n            this.drawType = 1;\n            data.forEach((ary, index) => {\n              this.markers.push({\n                icon: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png\",\n                position: [ary.split(\",\")[0], ary.split(\",\")[1]]\n              });\n              if (index == data.length - 1) {\n                this.setting();\n                this.drawSt();\n                this.isfirstLoding = false;\n              }\n            });\n          }\n        })\n        .catch(err => {\n          this.toast(\"查询失败\");\n        });\n    },\n    mapClk(res) {\n      if (this.drawType == 0) {\n        this.markers = [\n          {\n            icon: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png\",\n            position: [res.Lng, res.lat]\n          }\n        ];\n        //如果是圆形类型\n        this.setting();\n        this.drawSt();\n      } else {\n        //自定义形状\n        this.markers.push({\n          icon: \"http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png\",\n          position: [res.Lng, res.lat]\n        });\n        this.setting();\n        if (this.markers.length > 3 || this.markers.length == 3) {\n          this.drawSt();\n        }\n      }\n    },\n    setting() {\n      //设置标记点\n      let _this = this;\n      if (this.drawType == 0) {\n        if (this.isClik) {\n          //第一次点击设置标记\n          postionMark = new AMap.Marker({\n            map: _this.map,\n            icon: _this.markers[0].icon,\n            position: [\n              _this.markers[0].position[0],\n              _this.markers[0].position[1]\n            ],\n            offset: new AMap.Pixel(-12, -36)\n          });\n          postionMark.setMap(_this.map);\n          this.isClik = false;\n        } else {\n          //第二次更新标记\n          postionMark.setPosition([\n            _this.markers[0].position[0],\n            _this.markers[0].position[1]\n          ]); //更新点标记位置\n        }\n      } else {\n        //多边形标记\n        this.markers.forEach(function(marker) {\n          positionMarkPry = new AMap.Marker({\n            map: _this.map,\n            icon: marker.icon,\n            position: [marker.position[0], marker.position[1]],\n            offset: new AMap.Pixel(-12, -36)\n          });\n          _this.markerArray.push(positionMarkPry);\n          positionMarkPry.setMap(_this.map);\n        });\n      }\n    },\n    drawSt() {\n      //画围栏事件\n      let _this = this;\n      //画出围栏\n      if (this.drawType == 0) {\n        //圆形类型\n        if (this.isdraw) {\n          //第一个设置圆形\n          circle = new AMap.Circle({\n            center: new AMap.LngLat(\n              _this.markers[0].position[0],\n              _this.markers[0].position[1]\n            ), // 圆心位置\n            radius: _this.radius, //半径\n            strokeColor: \"#F33\", //线颜色\n            strokeOpacity: 1, //线透明度\n            strokeWeight: 3, //线粗细度\n            fillColor: \"#ee2200\", //填充颜色\n            fillOpacity: 0.35 //填充透明度\n          });\n          circle.setMap(this.map);\n          this.isdraw = false;\n        } else {\n          //更新圆形中心位置\n          circle.setCenter([\n            this.markers[0].position[0],\n            this.markers[0].position[1]\n          ]);\n        }\n      } else {\n        //自定义类型\n        let polygonArr = new Array(); //多边形覆盖物节点坐标数组\n        this.markers.forEach(function(marker) {\n          polygonArr.push([marker.position[0], marker.position[1]]);\n        });\n        polygon = new AMap.Polygon({\n          path: polygonArr, //设置多边形边界路径\n          strokeColor: \"#FF33FF\", //线颜色\n          strokeOpacity: 0.2, //线透明度\n          strokeWeight: 3, //线宽\n          fillColor: \"#1791fc\", //填充色\n          fillOpacity: 0.35 //填充透明度\n        });\n        polygon.setMap(this.map);\n      }\n    },\n    drawClk(val) {\n      //选择围栏类型\n      this.drawType = val.type;\n    },\n    goback() {\n      //返回上一页\n      this.$router.go(-1);\n    },\n    goedit() {\n      let datajson;\n      if (this.markers.length == 0) {\n        this.toast(\"请先设置围栏\");\n        return false;\n      }\n      if (this.drawType == 0) {\n        datajson = {\n          type: this.drawType,\n          data: this.markers,\n          radius: this.radius\n        };\n      } else {\n        datajson = { type: this.drawType, data: this.markers, radius: \"\" };\n      }\n      this.$store.commit(\"setMap\", datajson); //把数据存入仓库当中\n      this.$router.push({\n        path: \"/editMap/mapInfo_edit\",\n        query: { gid: this.$route.query.gid, name: this.mapInfo.name,id:this.$route.query.id}\n      });\n    }\n  },\n  watch: {\n    radius(val) {\n      //监听改变拖动value的值\n      circle.setRadius(val);\n    },\n    drawType(val) {\n      /***\n       * 当this.drawType为0时切换为了圆形围栏，那么需要置空多边形。设置isClick为true,isdraw为true\n       *\n       */\n      console.log(this.isfirstLoding)\n      if (!this.isfirstLoding) {\n        console.log('变化')\n        //判断是否为编辑围栏，如果为编辑围栏那么初次进入页面注销watch事件\n        if (this.markers.length > 0) {\n          if (val == 0) {\n            this.map.remove(this.markerArray);\n            polygon.setMap(null);\n            this.isClik = true;\n            this.isdraw = true;\n          } else {\n            postionMark.setMap(null);\n            circle.setMap(null);\n          }\n          this.markers = [];\n        }\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"../../assets/sass/_mixins.scss\";\n@import \"../../assets/sass/_parameters.scss\";\n.editmap-body {\n  height: 100%;\n  overflow: hidden;\n  #container {\n    height: 100%;\n    margin: 0px;\n    position: relative;\n  }\n  .footer-tip {\n    position: fixed;\n    bottom: 0;\n    background: #f0e7a4;\n    display: flex;\n    width: 100%;\n    @include wh(100%,60px);\n    z-index: 555;\n    padding: 10px 12px;\n    box-sizing: border-box;\n    color: #fff;\n    p {\n      flex: 1;\n      color: #008ceb;\n      height: 100%;\n      margin: auto;\n    }\n  }\n  .router-body {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    @include wh(100%,100%);\n    z-index: 666;\n    background: #fff;\n  }\n  .drag-body {\n    display: flex;\n    justify-content: center;\n    .drag {\n      position: fixed;\n      padding-top: 12px;\n      align-items: center;\n      top: 40px;\n      margin: auto;\n      padding: 12px 12px;\n      box-sizing: border-box;\n      @include wh(100%,80px);\n      background: #fff;\n      p {\n        margin-top: 8px;\n        margin-bottom: 8px;\n      }\n    }\n  }\n}\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/views/enclosure/editMap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"editmap-body\"},[_c('mt-header',{attrs:{\"title\":\"电子围栏\"}},[_c('mt-button',{attrs:{\"slot\":\"left\",\"icon\":\"back\"},on:{\"click\":_vm.goback},slot:\"left\"}),_vm._v(\" \"),_c('span',{attrs:{\"slot\":\"right\"},on:{\"click\":function($event){_vm.sheetVisible=true}},slot:\"right\"},[_vm._v(\"围栏类型\")])],1),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"container\",\"tabindex\":\"0\"}}),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.drawType==0),expression:\"drawType==0\"}],staticClass:\"drag-body\"},[_c('div',{staticClass:\"drag\"},[_c('mt-range',{attrs:{\"min\":100,\"step\":100,\"max\":1500},model:{value:(_vm.radius),callback:function ($$v) {_vm.radius=$$v},expression:\"radius\"}},[_c('div',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"slot\":\"start\"},slot:\"start\"},[_vm._v(\"100\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"slot\":\"end\"},slot:\"end\"},[_vm._v(\"150\")])]),_vm._v(\" \"),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isdraw),expression:\"!isdraw\"}]},[_vm._v(\"当前圆形半径为：\"+_vm._s(_vm.radius))])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"footer-tip\"},[(_vm.drawType==1)?_c('p',[_vm._v(\"请在地图上点击三个以上的点组成一个闭合的多边形作为安全范围的区域\")]):_c('p',[_vm._v(\"请在地图上点击任意位置\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn-ok\",on:{\"click\":_vm.goedit}},[_vm._v(\"确定\")])]),_vm._v(\" \"),_c('mt-actionsheet',{attrs:{\"actions\":_vm.actions},model:{value:(_vm.sheetVisible),callback:function ($$v) {_vm.sheetVisible=$$v},expression:\"sheetVisible\"}}),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"slide\"}},[_c('router-view',{staticClass:\"router-body\"})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-7d997a22\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=template&index=0!./src/views/enclosure/editMap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7d997a22\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=styles&index=0!./editMap.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./editMap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./editMap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7d997a22\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=template&index=0!./editMap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7d997a22\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/enclosure/editMap.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}